plugins {
    id("io.micronaut.application") version "4.5.0"
    id("com.gradleup.shadow") version "8.3.6"
    id("io.micronaut.aot") version "4.5.0"
}

version = "0.1"
group = "com.clean.architecture"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'io.micronaut:micronaut-inject-java'
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.data:micronaut-data-processor:2.4.3")
    annotationProcessor("io.soabase.record-builder:record-builder-processor:1.19")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")

    compileOnly("io.soabase.record-builder:record-builder-core:1.19")
    implementation("io.micronaut:micronaut-http-client")

    implementation("io.r2dbc:r2dbc-pool")
    implementation 'io.micronaut:micronaut-runtime'
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.data:micronaut-data-r2dbc")
    implementation("io.micronaut.security:micronaut-security-jwt")

    implementation "io.r2dbc:r2dbc-h2"
    implementation("org.postgresql:r2dbc-postgresql:1.0.5.RELEASE")

    implementation("jakarta.persistence:jakarta.persistence-api:2.2.2")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.1.0'

    implementation("com.fasterxml.jackson.module:jackson-module-jsonSchema:2.17.0")
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
    implementation 'javax.xml.parsers:jaxp-api:1.4.5'
    implementation('org.yaml:snakeyaml')

    runtimeOnly "com.h2database:h2"
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.12.5")
    // https://mvnrepository.com/artifact/io.reactivex.rxjava3/rxjava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.9'
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation("org.mockito:mockito-core:5.11.0")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    implementation 'com.itextpdf:itext-core:8.0.4'
    implementation group: 'com.google.zxing', name: 'core', version: '3.5.3'
    implementation group: 'com.google.zxing', name: 'javase', version: '3.5.3'
    implementation('org.apache.pdfbox:pdfbox:2.0.30')
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.1'
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation("io.jsonwebtoken:jjwt-api:0.12.5")

    aotPlugins("io.micronaut.security:micronaut-security-aot")

}


application {
    mainClass = "com.clean.architecture.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.clean.architecture.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}



